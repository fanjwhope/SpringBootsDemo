<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.gt.SpringBootsDemo</groupId>
  <artifactId>SpringBootsDemo</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>SpringBootsDemo Maven Webapp</name>
  <url>http://maven.apache.org</url>

 <!-- pom中parent设为 spring-boot-starter-parent 。
 （注意：1.3.3 版本报错。）
 建议使用最新的 RELEASE 版本。否则可能需要设置 <repositories/> 和<pluginRepositories/>-->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.4.2.RELEASE</version>
  </parent>


  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>

    </dependency>

     <!-- jsp  -->
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
      </dependency>

      <!-- 需要添加tomcat插件, 还不能有<scope>provided</scope> 添加依赖: -->
      <dependency>
          <groupId>org.apache.tomcat.embed</groupId>
          <artifactId>tomcat-embed-jasper</artifactId>
        <!-- <scope>provided</scope>-->
      </dependency>


      <dependency>
          <groupId>org.apache.tomcat.embed</groupId>
          <artifactId>tomcat-embed-jasper</artifactId>
          <scope>provided</scope>
      </dependency>

    <!--mybatis整合springboot的jar-->
   <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>1.3.0</version>
    </dependency>

  <!-- 数据库驱动 oracle -->
    <dependency>
      <groupId>ojdbc</groupId>
      <artifactId>ojdbc</artifactId>
      <version>6.0</version>
    </dependency>

    <!--MySQL JDBC驱动-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!--dom4j -->
      <dependency>
          <groupId>dom4j</groupId>
          <artifactId>dom4j</artifactId>
          <version>1.6.1</version>
     </dependency>

     <!-- XStream是一个可以将javaBean与XML双向转换的java类库
       1.3.1：版本可以将父类的属性也转换为节点。
       但是 1.4.4 不能将父类的属性转换为XML节点
       -->
      <dependency>
          <groupId>com.thoughtworks.xstream</groupId>
          <artifactId>xstream</artifactId>
          <version>1.3.1</version>
      </dependency>
      <!--  Gson 引入。json 处理-->
      <dependency>
          <groupId>com.google.code.gson</groupId>
          <artifactId>gson</artifactId>
          <version>2.8.0</version>
      </dependency>

       <!--引入import net.sf.json.JSONObject json 处理 需要加入 classifier 节点。否则有问题-->
      <dependency>
          <groupId>net.sf.json-lib</groupId>
          <artifactId>json-lib</artifactId>
          <version>2.4</version>
          <classifier>jdk15</classifier>
      </dependency>

      <!--junit-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

      <!--热部署
      http://stackoverflow.com/questions/28783832/getting-spring-boot-color-console-logging-working-within-intellij 没有用呀。。。
      两步：
        1、CTRL + SHIFT + A - 查找make project automatically  选中
        2、CTRL + SHIFT + A - 查找Registry  -  找到并勾选compiler.automake.allow.when.app.running
        当然了，要在pom.xml中添加上 spring开发工具包 spring-boot-devtools
      -->
    <dependency>
       <groupId>org.springframework.boot</groupId>
       <artifactId>spring-boot-devtools</artifactId>
       <optional>true</optional><!-- 这个需要为 true 热部署才有效 -->
    </dependency>
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <scope>test</scope>
      </dependency>

      <!-- Apache POI是Apache软件基金会的开放源码函式库，POI提供API给Java程式对Microsoft Office格式档案读和写的功能
          HSSF － 提供读写Microsoft Excel格式档案的功能。
          XSSF － 提供读写Microsoft Excel OOXML格式档案的功能。
          HWPF － 提供读写Microsoft Word格式档案的功能。
          HSLF － 提供读写Microsoft PowerPoint格式档案的功能。
          HDGF － 提供读写Microsoft Visio格式档案的功能。
       -->
      <dependency>
          <groupId>org.apache.poi</groupId>
          <artifactId>poi</artifactId>
          <version>3.15</version>
      </dependency>
      <!-- 支持Word文档的操作
           注意：要想让 poi 操作 word ，须要引入 poi-scratchpad 这个模块。-->
      <dependency>
          <groupId>org.apache.poi</groupId>
          <artifactId>poi-scratchpad</artifactId>
          <version>3.15</version>
      </dependency>

      <!--poi 使用模板生成word文档-->
      <dependency>
          <groupId>org.apache.poi</groupId>
          <artifactId>poi-ooxml</artifactId>
          <version>3.15</version>
          <type>jar</type>
      </dependency>
      <dependency>
          <groupId>org.apache.poi</groupId>
          <artifactId>poi-ooxml-schemas</artifactId>
          <version>3.15</version>
          <type>jar</type>
          <scope>compile</scope>
      </dependency>
  </dependencies>

  <!-- Package as an executable jar
  打包。executable jars 又称 fat jars，是可以直接在生产环境中运行的，包含所有编译生成的class文件以及依赖包。
       注意，Spring Boot的这种打包方式需要使用Spring Boot提供的 spring-boot-maven-plugin 。
  -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
              <fork>true</fork>  <!-- 热部署 该配置必须-->
        </configuration>
      </plugin>

      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.4</version>
          <configuration>
              <warSourceDirectory>src/main/webapp</warSourceDirectory>
              <warName>SpringBootsDemo</warName>
              <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
      </plugin>

        <!-- maven 工程修改jdk 版本 http://blog.csdn.net/ytangdigl/article/details/72637445-->
      <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
            </configuration>
      </plugin>

    </plugins>
    <finalName>SpringBootsDemo</finalName>
  </build>
</project>
